package Hashing;

import java.util.Arrays;
import java.util.HashMap;

public class FirstElementToOccurKtimes {

	static class pair {
		int count;
		int ix;

		pair(int count, int ix) {
			this.count = count;
			this.ix = ix;
		}
	}

	public static int firstElementKTime(int n, int k, int[] a) {

		HashMap<Integer, pair> map = new HashMap<Integer, pair>();

		for (int i = 0; i < n; i++) {
			if (!map.containsKey(a[i])) {
				map.put(a[i], new pair(1, i));
			} else {
				pair p = map.get(a[i]);
				if (p.count == k)
					continue;
				p.count++;
				p.ix = i;

				map.put(a[i], p);

			}
		}
		System.out.println(Arrays.asList(map));
		System.out.println(map.get(57).count+","+map.get(57).ix);
		int ele_index = Integer.MAX_VALUE;
		int ele = -1;
		for (int i = 0; i < n; i++) {
			pair p = map.get(a[i]);
			if (p.count == k && p.ix < ele_index)
				{ele = a[i];
			ele_index = p.ix;}
		}

		return ele;
	}

	public static void main(String args[]) {
		int arr[] = { 34, 197, 200, 119, 20, 196, 162, 108, 90, 15, 107, 194, 80, 133, 190, 190, 11, 38, 64, 19, 151,
				55, 86, 124, 24, 95, 198, 170, 168, 163, 92, 134, 53, 41, 26, 65, 101, 103, 57, 84, 105, 35, 180, 151,
				199, 189, 200, 167, 15, 154, 178, 67, 97, 28, 186, 193, 188, 138, 82, 82, 116, 5, 149, 12, 162, 111, 95,
				149, 136, 72, 107, 134, 40, 115, 170, 89, 186, 152, 136, 70, 33, 117, 5, 121, 49, 14, 79, 85, 114, 79,
				127, 164, 29, 118, 120, 143, 175, 86, 182, 112, 155, 30, 200, 70, 76, 57, 110, 30, 136, 95, 157, 11,
				176, 19, 47, 47, 62, 47, 58, 174, 158, 200, 198, 87, 155, 88, 151, 27, 30, 102, 150, 118, 63, 128, 190,
				101, 88, 8, 102, 56, 146, 91, 157, 188, 67, 22, 73, 180, 168, 131, 61, 186, 98, 77, 38, 103, 25, 129,
				172, 90, 25, 92, 50, 62, 87, 160, 110, 50, 10, 100, 65, 70, 77, 103, 74, 113, 3, 149, 58, 151, 15, 198,
				158, 118, 135, 42, 28, 81, 188, 199, 76, 86, 2, 178, 56, 48, 160, 158, 28, 15, 188, 12, 84, 31, 7, 56,
				13, 183, 72, 160, 191, 72, 27, 149, 140, 151, 104, 167, 47, 70, 122, 2, 197, 111, 41, 73, 115, 97, 36,
				115, 137, 147, 14, 170, 86, 47, 97, 157, 52, 165, 135, 44, 134, 28, 169, 71, 4, 121, 141, 101, 83, 50,
				35, 89, 60, 32, 71, 80, 176, 166, 166, 145, 76, 167, 57, 89, 48, 124, 29, 153, 188, 187, 131, 138, 43,
				33, 27, 80, 15, 200, 145, 117, 117, 25, 106, 6, 110, 115, 46, 79, 124, 18, 175, 54, 8, 107, 66, 41, 7,
				11, 194, 41, 38, 179, 191, 55, 148, 60, 96, 166, 137, 162, 120, 183, 14, 95, 30, 46, 48, 134, 108, 108,
				189, 119, 152, 167, 172, 6, 112, 190, 169, 75, 147, 71, 197, 117, 5, 196, 31, 195, 20, 27, 78, 128, 3,
				46, 104, 145, 166, 4, 127, 4, 130, 14, 3, 10, 120, 187, 157, 1, 96, 179, 119, 5, 7, 65, 44, 106, 120,
				119, 164, 157, 106, 102, 185, 80, 186, 18, 8, 54, 195, 133, 8, 174, 18, 50, 113, 47, 106, 105, 83, 99,
				188, 92, 46, 7, 74, 95, 29, 44, 128, 37, 91, 5, 27, 69, 193, 86, 181, 152, 197, 21, 188, 58, 62, 161,
				26, 144, 70, 177, 91, 48, 195, 77, 133, 33, 63, 7, 45, 33, 63, 187, 115, 31, 100, 144, 151, 131, 192,
				32, 192, 89, 106, 135, 16, 152, 156, 115, 123, 75, 87, 58, 156, 24, 193, 192, 189, 38, 57, 160, 199,
				188, 58, 117, 47, 82, 28, 159, 134, 72, 68, 98, 101, 74, 73, 145, 113, 116, 33, 105, 56, 177, 29, 62,
				128, 12, 175, 148, 200, 142, 112, 15, 133, 106, 195, 176, 7, 128, 63, 67, 130, 88, 83, 89, 113, 172, 17,
				55, 121, 57, 56, 180, 141, 154, 57, 84, 43, 2, 148, 84, 123, 108, 98, 168, 185, 57, 146, 56, 187, 87,
				128, 101, 200, 139, 45, 114, 82, 136, 23, 128, 67, 57, 77, 105, 2, 172, 72, 123, 33, 124, 38, 94, 112,
				71, 107, 128, 41, 104, 12, 186, 115, 148, 143, 85, 60, 126, 161, 114, 73, 57, 25, 70, 110, 186, 171, 12,
				153, 40, 1, 78, 26 };

		System.out.println(arr.length);
		int k = firstElementKTime(arr.length, 9, arr);
		System.out.println(k);
	}
}
